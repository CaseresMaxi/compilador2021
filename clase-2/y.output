Terminals unused in grammar

   CONST_FLOAT
   CONST_STRING
   ELSE_T
   IF_T
   OP_DISTINTO
   OP_COMP
   OP_MAYORIGUAL
   OP_MAYOR
   OP_MENOR
   OP_MENORIGUAL
   LLAVE_C
   LLAVE_A
   OP_AS
   WHILE_T
   SEPARADOR_T
   FLOAT_T
   INTEGER_T
   DIM_T
   AS_T
   TOKEN_PUT
   GET_T
   CONST_T
   TOKEN_AND
   TOKEN_OR
   MAX_TOKEN
   WRITE_T
   ENDDEC_T
   DECVAR_T


Grammar

    0 $accept: programa $end

    1 programa: grammar SEP_LINEA
    2         | grammar SEP_LINEA "\\n" grammar SEP_LINEA

    3 grammar: expr
    4        | asig

    5 asig: ID_T OP_ASIG expr

    6 expr: expr OP_SUM expr
    7     | expr OP_MENOS expr
    8     | termino

    9 termino: termino OP_MUL factor
   10        | termino OP_DIVISION factor
   11        | factor

   12 factor: PARENT_A expr PARENT_C
   13       | CONST_INT


Terminals, with rules where they appear

$end (0) 0
error (256)
CONST_INT (258) 13
CONST_FLOAT (259)
CONST_STRING (260)
ELSE_T (261)
IF_T (262)
OP_DISTINTO (263)
OP_COMP (264)
OP_MAYORIGUAL (265)
OP_MAYOR (266)
OP_MENOR (267)
OP_MENORIGUAL (268)
LLAVE_C (269)
LLAVE_A (270)
PARENT_C (271) 12
PARENT_A (272) 12
OP_DIVISION (273) 10
OP_AS (274)
OP_SUM (275) 6
OP_MENOS (276) 7
OP_MUL (277) 9
WHILE_T (278)
SEP_LINEA (279) 1 2
SEPARADOR_T (280)
FLOAT_T (281)
INTEGER_T (282)
DIM_T (283)
AS_T (284)
TOKEN_PUT (285)
GET_T (286)
CONST_T (287)
TOKEN_AND (288)
TOKEN_OR (289)
MAX_TOKEN (290)
ID_T (291) 5
WRITE_T (292)
ENDDEC_T (293)
DECVAR_T (294)
OP_ASIG (295) 5
"\\n" (296) 2


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
programa (43)
    on left: 1 2, on right: 0
grammar (44)
    on left: 3 4, on right: 1 2
asig (45)
    on left: 5, on right: 4
expr (46)
    on left: 6 7 8, on right: 3 5 6 7 12
termino (47)
    on left: 9 10 11, on right: 8 9 10
factor (48)
    on left: 12 13, on right: 9 10 11


state 0

    0 $accept: . programa $end

    CONST_INT  shift, and go to state 1
    PARENT_A   shift, and go to state 2
    ID_T       shift, and go to state 3

    programa  go to state 4
    grammar   go to state 5
    asig      go to state 6
    expr      go to state 7
    termino   go to state 8
    factor    go to state 9


state 1

   13 factor: CONST_INT .

    $default  reduce using rule 13 (factor)


state 2

   12 factor: PARENT_A . expr PARENT_C

    CONST_INT  shift, and go to state 1
    PARENT_A   shift, and go to state 2

    expr     go to state 10
    termino  go to state 8
    factor   go to state 9


state 3

    5 asig: ID_T . OP_ASIG expr

    OP_ASIG  shift, and go to state 11


state 4

    0 $accept: programa . $end

    $end  shift, and go to state 12


state 5

    1 programa: grammar . SEP_LINEA
    2         | grammar . SEP_LINEA "\\n" grammar SEP_LINEA

    SEP_LINEA  shift, and go to state 13


state 6

    4 grammar: asig .

    $default  reduce using rule 4 (grammar)


state 7

    3 grammar: expr .
    6 expr: expr . OP_SUM expr
    7     | expr . OP_MENOS expr

    OP_SUM    shift, and go to state 14
    OP_MENOS  shift, and go to state 15

    $default  reduce using rule 3 (grammar)


state 8

    8 expr: termino .
    9 termino: termino . OP_MUL factor
   10        | termino . OP_DIVISION factor

    OP_DIVISION  shift, and go to state 16
    OP_MUL       shift, and go to state 17

    $default  reduce using rule 8 (expr)


state 9

   11 termino: factor .

    $default  reduce using rule 11 (termino)


state 10

    6 expr: expr . OP_SUM expr
    7     | expr . OP_MENOS expr
   12 factor: PARENT_A expr . PARENT_C

    PARENT_C  shift, and go to state 18
    OP_SUM    shift, and go to state 14
    OP_MENOS  shift, and go to state 15


state 11

    5 asig: ID_T OP_ASIG . expr

    CONST_INT  shift, and go to state 1
    PARENT_A   shift, and go to state 2

    expr     go to state 19
    termino  go to state 8
    factor   go to state 9


state 12

    0 $accept: programa $end .

    $default  accept


state 13

    1 programa: grammar SEP_LINEA .
    2         | grammar SEP_LINEA . "\\n" grammar SEP_LINEA

    "\\n"  shift, and go to state 20

    $default  reduce using rule 1 (programa)


state 14

    6 expr: expr OP_SUM . expr

    CONST_INT  shift, and go to state 1
    PARENT_A   shift, and go to state 2

    expr     go to state 21
    termino  go to state 8
    factor   go to state 9


state 15

    7 expr: expr OP_MENOS . expr

    CONST_INT  shift, and go to state 1
    PARENT_A   shift, and go to state 2

    expr     go to state 22
    termino  go to state 8
    factor   go to state 9


state 16

   10 termino: termino OP_DIVISION . factor

    CONST_INT  shift, and go to state 1
    PARENT_A   shift, and go to state 2

    factor  go to state 23


state 17

    9 termino: termino OP_MUL . factor

    CONST_INT  shift, and go to state 1
    PARENT_A   shift, and go to state 2

    factor  go to state 24


state 18

   12 factor: PARENT_A expr PARENT_C .

    $default  reduce using rule 12 (factor)


state 19

    5 asig: ID_T OP_ASIG expr .
    6 expr: expr . OP_SUM expr
    7     | expr . OP_MENOS expr

    OP_SUM    shift, and go to state 14
    OP_MENOS  shift, and go to state 15

    $default  reduce using rule 5 (asig)


state 20

    2 programa: grammar SEP_LINEA "\\n" . grammar SEP_LINEA

    CONST_INT  shift, and go to state 1
    PARENT_A   shift, and go to state 2
    ID_T       shift, and go to state 3

    grammar  go to state 25
    asig     go to state 6
    expr     go to state 7
    termino  go to state 8
    factor   go to state 9


state 21

    6 expr: expr . OP_SUM expr
    6     | expr OP_SUM expr .
    7     | expr . OP_MENOS expr

    $default  reduce using rule 6 (expr)


state 22

    6 expr: expr . OP_SUM expr
    7     | expr . OP_MENOS expr
    7     | expr OP_MENOS expr .

    $default  reduce using rule 7 (expr)


state 23

   10 termino: termino OP_DIVISION factor .

    $default  reduce using rule 10 (termino)


state 24

    9 termino: termino OP_MUL factor .

    $default  reduce using rule 9 (termino)


state 25

    2 programa: grammar SEP_LINEA "\\n" grammar . SEP_LINEA

    SEP_LINEA  shift, and go to state 26


state 26

    2 programa: grammar SEP_LINEA "\\n" grammar SEP_LINEA .

    $default  reduce using rule 2 (programa)
