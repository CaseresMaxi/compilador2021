Terminals unused in grammar

   CONST_FLOAT
   CONST_STRING
   ELSE_T
   IF_T
   OP_DISTINTO
   OP_COMP
   OP_MAYORIGUAL
   OP_MAYOR
   OP_MENOR
   OP_MENORIGUAL
   OP_AS
   SEPARADOR_T
   FLOAT_T
   INTEGER_T
   DIM_T
   AS_T
   TOKEN_PUT
   GET_T
   CONST_T
   TOKEN_AND
   TOKEN_OR
   MAX_TOKEN
   WRITE_T
   ENDDEC_T
   DECVAR_T
   OP_AVG
   COMA


Gramática

    0 $accept: programa $end

    1 programa: sentencia

    2 sentencia: sentencia grammar SEP_LINEA
    3          | grammar SEP_LINEA

    4 grammar: expr
    5        | asig
    6        | while

    7 while: WHILE_T PARENT_A CONST_INT PARENT_C LLAVE_A programa LLAVE_C

    8 asig: ID_T OP_ASIG expr

    9 expr: expr OP_SUM expr
   10     | expr OP_MENOS expr
   11     | termino

   12 termino: termino OP_MUL factor
   13        | termino OP_DIVISION factor
   14        | factor

   15 factor: PARENT_A expr PARENT_C
   16       | CONST_INT


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
CONST_INT (258) 7 16
CONST_FLOAT (259)
CONST_STRING (260)
ELSE_T (261)
IF_T (262)
OP_DISTINTO (263)
OP_COMP (264)
OP_MAYORIGUAL (265)
OP_MAYOR (266)
OP_MENOR (267)
OP_MENORIGUAL (268)
LLAVE_C (269) 7
LLAVE_A (270) 7
PARENT_C (271) 7 15
PARENT_A (272) 7 15
OP_DIVISION (273) 13
OP_AS (274)
OP_SUM (275) 9
OP_MENOS (276) 10
OP_MUL (277) 12
WHILE_T (278) 7
SEP_LINEA (279) 2 3
SEPARADOR_T (280)
FLOAT_T (281)
INTEGER_T (282)
DIM_T (283)
AS_T (284)
TOKEN_PUT (285)
GET_T (286)
CONST_T (287)
TOKEN_AND (288)
TOKEN_OR (289)
MAX_TOKEN (290)
ID_T (291) 8
WRITE_T (292)
ENDDEC_T (293)
DECVAR_T (294)
OP_ASIG (295) 8
OP_AVG (296)
COMA (297)


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
programa (44)
    en la izquierda: 1, en la derecha: 0 7
sentencia (45)
    en la izquierda: 2 3, en la derecha: 1 2
grammar (46)
    en la izquierda: 4 5 6, en la derecha: 2 3
while (47)
    en la izquierda: 7, en la derecha: 6
asig (48)
    en la izquierda: 8, en la derecha: 5
expr (49)
    en la izquierda: 9 10 11, en la derecha: 4 8 9 10 15
termino (50)
    en la izquierda: 12 13 14, en la derecha: 11 12 13
factor (51)
    en la izquierda: 15 16, en la derecha: 12 13 14


estado 0

    0 $accept: . programa $end

    CONST_INT  desplazar e ir al estado 1
    PARENT_A   desplazar e ir al estado 2
    WHILE_T    desplazar e ir al estado 3
    ID_T       desplazar e ir al estado 4

    programa   ir al estado 5
    sentencia  ir al estado 6
    grammar    ir al estado 7
    while      ir al estado 8
    asig       ir al estado 9
    expr       ir al estado 10
    termino    ir al estado 11
    factor     ir al estado 12


estado 1

   16 factor: CONST_INT .

    $default  reduce usando la regla 16 (factor)


estado 2

   15 factor: PARENT_A . expr PARENT_C

    CONST_INT  desplazar e ir al estado 1
    PARENT_A   desplazar e ir al estado 2

    expr     ir al estado 13
    termino  ir al estado 11
    factor   ir al estado 12


estado 3

    7 while: WHILE_T . PARENT_A CONST_INT PARENT_C LLAVE_A programa LLAVE_C

    PARENT_A  desplazar e ir al estado 14


estado 4

    8 asig: ID_T . OP_ASIG expr

    OP_ASIG  desplazar e ir al estado 15


estado 5

    0 $accept: programa . $end

    $end  desplazar e ir al estado 16


estado 6

    1 programa: sentencia .
    2 sentencia: sentencia . grammar SEP_LINEA

    CONST_INT  desplazar e ir al estado 1
    PARENT_A   desplazar e ir al estado 2
    WHILE_T    desplazar e ir al estado 3
    ID_T       desplazar e ir al estado 4

    $default  reduce usando la regla 1 (programa)

    grammar  ir al estado 17
    while    ir al estado 8
    asig     ir al estado 9
    expr     ir al estado 10
    termino  ir al estado 11
    factor   ir al estado 12


estado 7

    3 sentencia: grammar . SEP_LINEA

    SEP_LINEA  desplazar e ir al estado 18


estado 8

    6 grammar: while .

    $default  reduce usando la regla 6 (grammar)


estado 9

    5 grammar: asig .

    $default  reduce usando la regla 5 (grammar)


estado 10

    4 grammar: expr .
    9 expr: expr . OP_SUM expr
   10     | expr . OP_MENOS expr

    OP_SUM    desplazar e ir al estado 19
    OP_MENOS  desplazar e ir al estado 20

    $default  reduce usando la regla 4 (grammar)


estado 11

   11 expr: termino .
   12 termino: termino . OP_MUL factor
   13        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 21
    OP_MUL       desplazar e ir al estado 22

    $default  reduce usando la regla 11 (expr)


estado 12

   14 termino: factor .

    $default  reduce usando la regla 14 (termino)


estado 13

    9 expr: expr . OP_SUM expr
   10     | expr . OP_MENOS expr
   15 factor: PARENT_A expr . PARENT_C

    PARENT_C  desplazar e ir al estado 23
    OP_SUM    desplazar e ir al estado 19
    OP_MENOS  desplazar e ir al estado 20


estado 14

    7 while: WHILE_T PARENT_A . CONST_INT PARENT_C LLAVE_A programa LLAVE_C

    CONST_INT  desplazar e ir al estado 24


estado 15

    8 asig: ID_T OP_ASIG . expr

    CONST_INT  desplazar e ir al estado 1
    PARENT_A   desplazar e ir al estado 2

    expr     ir al estado 25
    termino  ir al estado 11
    factor   ir al estado 12


estado 16

    0 $accept: programa $end .

    $default  aceptar


estado 17

    2 sentencia: sentencia grammar . SEP_LINEA

    SEP_LINEA  desplazar e ir al estado 26


estado 18

    3 sentencia: grammar SEP_LINEA .

    $default  reduce usando la regla 3 (sentencia)


estado 19

    9 expr: expr OP_SUM . expr

    CONST_INT  desplazar e ir al estado 1
    PARENT_A   desplazar e ir al estado 2

    expr     ir al estado 27
    termino  ir al estado 11
    factor   ir al estado 12


estado 20

   10 expr: expr OP_MENOS . expr

    CONST_INT  desplazar e ir al estado 1
    PARENT_A   desplazar e ir al estado 2

    expr     ir al estado 28
    termino  ir al estado 11
    factor   ir al estado 12


estado 21

   13 termino: termino OP_DIVISION . factor

    CONST_INT  desplazar e ir al estado 1
    PARENT_A   desplazar e ir al estado 2

    factor  ir al estado 29


estado 22

   12 termino: termino OP_MUL . factor

    CONST_INT  desplazar e ir al estado 1
    PARENT_A   desplazar e ir al estado 2

    factor  ir al estado 30


estado 23

   15 factor: PARENT_A expr PARENT_C .

    $default  reduce usando la regla 15 (factor)


estado 24

    7 while: WHILE_T PARENT_A CONST_INT . PARENT_C LLAVE_A programa LLAVE_C

    PARENT_C  desplazar e ir al estado 31


estado 25

    8 asig: ID_T OP_ASIG expr .
    9 expr: expr . OP_SUM expr
   10     | expr . OP_MENOS expr

    OP_SUM    desplazar e ir al estado 19
    OP_MENOS  desplazar e ir al estado 20

    $default  reduce usando la regla 8 (asig)


estado 26

    2 sentencia: sentencia grammar SEP_LINEA .

    $default  reduce usando la regla 2 (sentencia)


estado 27

    9 expr: expr . OP_SUM expr
    9     | expr OP_SUM expr .
   10     | expr . OP_MENOS expr

    $default  reduce usando la regla 9 (expr)


estado 28

    9 expr: expr . OP_SUM expr
   10     | expr . OP_MENOS expr
   10     | expr OP_MENOS expr .

    $default  reduce usando la regla 10 (expr)


estado 29

   13 termino: termino OP_DIVISION factor .

    $default  reduce usando la regla 13 (termino)


estado 30

   12 termino: termino OP_MUL factor .

    $default  reduce usando la regla 12 (termino)


estado 31

    7 while: WHILE_T PARENT_A CONST_INT PARENT_C . LLAVE_A programa LLAVE_C

    LLAVE_A  desplazar e ir al estado 32


estado 32

    7 while: WHILE_T PARENT_A CONST_INT PARENT_C LLAVE_A . programa LLAVE_C

    CONST_INT  desplazar e ir al estado 1
    PARENT_A   desplazar e ir al estado 2
    WHILE_T    desplazar e ir al estado 3
    ID_T       desplazar e ir al estado 4

    programa   ir al estado 33
    sentencia  ir al estado 6
    grammar    ir al estado 7
    while      ir al estado 8
    asig       ir al estado 9
    expr       ir al estado 10
    termino    ir al estado 11
    factor     ir al estado 12


estado 33

    7 while: WHILE_T PARENT_A CONST_INT PARENT_C LLAVE_A programa . LLAVE_C

    LLAVE_C  desplazar e ir al estado 34


estado 34

    7 while: WHILE_T PARENT_A CONST_INT PARENT_C LLAVE_A programa LLAVE_C .

    $default  reduce usando la regla 7 (while)
